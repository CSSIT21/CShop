
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal
} = require('@prisma/client/runtime/index-browser')


const Prisma = {}

exports.Prisma = Prisma

/**
 * Prisma Client JS version: 3.5.0
 * Query Engine version: 78a5df6def6943431f4c022e1428dbc3e833cf8e
 */
Prisma.prismaVersion = {
  client: "3.5.0",
  engine: "78a5df6def6943431f4c022e1428dbc3e833cf8e"
}

Prisma.PrismaClientKnownRequestError = () => {
  throw new Error(`PrismaClientKnownRequestError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  throw new Error(`PrismaClientUnknownRequestError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientRustPanicError = () => {
  throw new Error(`PrismaClientRustPanicError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientInitializationError = () => {
  throw new Error(`PrismaClientInitializationError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientValidationError = () => {
  throw new Error(`PrismaClientValidationError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  throw new Error(`sqltag is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.empty = () => {
  throw new Error(`empty is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.join = () => {
  throw new Error(`join is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.raw = () => {
  throw new Error(`raw is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.validator = () => (val) => val

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = 'DbNull'
Prisma.JsonNull = 'JsonNull'
Prisma.AnyNull = 'AnyNull'

/**
 * Enums
 */
// Based on
// https://github.com/microsoft/TypeScript/issues/3192#issuecomment-261720275
function makeEnum(x) { return x; }

exports.Prisma.CustomerScalarFieldEnum = makeEnum({
  id: 'id',
  email: 'email',
  password: 'password',
  date: 'date'
});

exports.Prisma.Customer_infoScalarFieldEnum = makeEnum({
  customer_id: 'customer_id',
  firstname: 'firstname',
  lastname: 'lastname',
  phone_number: 'phone_number',
  gender: 'gender',
  birthdate: 'birthdate'
});

exports.Prisma.Customer_pictureScalarFieldEnum = makeEnum({
  customer_id: 'customer_id',
  picture_id: 'picture_id'
});

exports.Prisma.Customer_picture_fileScalarFieldEnum = makeEnum({
  id: 'id',
  title: 'title',
  path: 'path',
  thumbnail: 'thumbnail',
  primary: 'primary'
});

exports.Prisma.AddressScalarFieldEnum = makeEnum({
  id: 'id',
  address_line: 'address_line',
  province: 'province',
  district: 'district',
  sub_district: 'sub_district',
  postal_code: 'postal_code',
  recipient_name: 'recipient_name',
  phone_number: 'phone_number'
});

exports.Prisma.Customer_addressScalarFieldEnum = makeEnum({
  customer_id: 'customer_id',
  address_id: 'address_id',
  primary: 'primary'
});

exports.Prisma.Customer_old_passwordScalarFieldEnum = makeEnum({
  customer_id: 'customer_id',
  password: 'password',
  changed_date: 'changed_date'
});

exports.Prisma.Customer_wishlistScalarFieldEnum = makeEnum({
  customer_id: 'customer_id',
  product_id: 'product_id',
  added_date: 'added_date'
});

exports.Prisma.Customer_followed_shopScalarFieldEnum = makeEnum({
  customer_id: 'customer_id',
  shop_id: 'shop_id',
  added_date: 'added_date'
});

exports.Prisma.Customer_email_verificationScalarFieldEnum = makeEnum({
  id: 'id',
  email: 'email',
  token: 'token',
  expire_date: 'expire_date'
});

exports.Prisma.Shop_infoScalarFieldEnum = makeEnum({
  id: 'id',
  customer_id: 'customer_id',
  shop_address_id: 'shop_address_id',
  shop_name: 'shop_name',
  join_date: 'join_date',
  phone_number: 'phone_number',
  last_active: 'last_active',
  description: 'description',
  followers: 'followers'
});

exports.Prisma.Shop_pictureScalarFieldEnum = makeEnum({
  shop_id: 'shop_id',
  title: 'title',
  path: 'path',
  thumbnail: 'thumbnail'
});

exports.Prisma.Shop_commentScalarFieldEnum = makeEnum({
  id: 'id',
  customer_id: 'customer_id',
  shop_id: 'shop_id',
  rating: 'rating',
  comment: 'comment',
  date: 'date'
});

exports.Prisma.Shop_section_logScalarFieldEnum = makeEnum({
  id: 'id',
  shop_id: 'shop_id',
  section_type: 'section_type',
  added_date: 'added_date',
  device: 'device'
});

exports.Prisma.Shop_sectionScalarFieldEnum = makeEnum({
  shop_id: 'shop_id',
  sections: 'sections'
});

exports.Prisma.Shop_flashsaleScalarFieldEnum = makeEnum({
  id: 'id',
  shop_id: 'shop_id',
  started_date: 'started_date',
  ended_date: 'ended_date',
  products: 'products',
  title: 'title',
  path: 'path',
  thumbnail: 'thumbnail',
  description: 'description'
});

exports.Prisma.Shop_flashsale_historyScalarFieldEnum = makeEnum({
  flashsale_id: 'flashsale_id',
  shop_id: 'shop_id',
  started_date: 'started_date',
  ended_date: 'ended_date',
  products: 'products',
  quantity: 'quantity'
});

exports.Prisma.Shop_bannerScalarFieldEnum = makeEnum({
  id: 'id',
  title: 'title',
  path: 'path',
  thumbnail: 'thumbnail'
});

exports.Prisma.Shop_banner_carouselScalarFieldEnum = makeEnum({
  id: 'id',
  banners: 'banners'
});

exports.Prisma.Shop_product_carouselScalarFieldEnum = makeEnum({
  id: 'id',
  filter_name: 'filter_name',
  products: 'products'
});

exports.Prisma.Shop_videoScalarFieldEnum = makeEnum({
  id: 'id',
  title: 'title',
  path: 'path'
});

exports.Prisma.Shop_categoryScalarFieldEnum = makeEnum({
  id: 'id',
  shop_id: 'shop_id',
  title: 'title',
  products: 'products'
});

exports.Prisma.Category_icon_pictureScalarFieldEnum = makeEnum({
  id: 'id',
  title: 'title',
  path: 'path',
  thumbnail: 'thumbnail'
});

exports.Prisma.Category_banner_pictureScalarFieldEnum = makeEnum({
  id: 'id',
  title: 'title',
  path: 'path',
  thumbnail: 'thumbnail'
});

exports.Prisma.CategoryScalarFieldEnum = makeEnum({
  id: 'id',
  name: 'name',
  icon_id: 'icon_id',
  banner_id: 'banner_id'
});

exports.Prisma.ProductScalarFieldEnum = makeEnum({
  id: 'id',
  shop_id: 'shop_id',
  title: 'title',
  sub_title: 'sub_title',
  category_id: 'category_id',
  price: 'price',
  quantity: 'quantity',
  sold: 'sold',
  added_date: 'added_date',
  suggest_products: 'suggest_products',
  rating: 'rating'
});

exports.Prisma.Product_detailScalarFieldEnum = makeEnum({
  product_id: 'product_id',
  info: 'info'
});

exports.Prisma.Product_reviewsScalarFieldEnum = makeEnum({
  id: 'id',
  product_id: 'product_id',
  customer_id: 'customer_id',
  rating: 'rating',
  comment: 'comment',
  review_time: 'review_time',
  review_picture_id: 'review_picture_id'
});

exports.Prisma.Product_reviews_pictureScalarFieldEnum = makeEnum({
  id: 'id',
  title: 'title',
  path: 'path',
  thumbnail: 'thumbnail'
});

exports.Prisma.Product_short_linkScalarFieldEnum = makeEnum({
  product_id: 'product_id',
  shorted_link: 'shorted_link'
});

exports.Prisma.Product_comment_ratingScalarFieldEnum = makeEnum({
  review_id: 'review_id',
  customer_id: 'customer_id',
  rate: 'rate',
  comment_time: 'comment_time'
});

exports.Prisma.Product_optionsScalarFieldEnum = makeEnum({
  id: 'id',
  product_id: 'product_id',
  name: 'name',
  enable: 'enable'
});

exports.Prisma.Product_choicesScalarFieldEnum = makeEnum({
  id: 'id',
  product_options_id: 'product_options_id',
  name: 'name',
  price: 'price',
  quantity: 'quantity',
  enable: 'enable'
});

exports.Prisma.DiscountScalarFieldEnum = makeEnum({
  id: 'id',
  code: 'code',
  start_date: 'start_date',
  end_date: 'end_date',
  description: 'description',
  class: 'class',
  min_price: 'min_price',
  reduce_price: 'reduce_price',
  discount_types: 'discount_types',
  added_date: 'added_date'
});

exports.Prisma.Discount_shopScalarFieldEnum = makeEnum({
  discount_id: 'discount_id',
  shop_id: 'shop_id',
  quantity: 'quantity',
  max_quantity: 'max_quantity'
});

exports.Prisma.EventScalarFieldEnum = makeEnum({
  id: 'id',
  title: 'title',
  description: 'description'
});

exports.Prisma.Discount_eventScalarFieldEnum = makeEnum({
  discount_id: 'discount_id',
  shop_id: 'shop_id',
  event_id: 'event_id',
  quantity: 'quantity',
  max_quantity: 'max_quantity'
});

exports.Prisma.Discount_appScalarFieldEnum = makeEnum({
  discount_id: 'discount_id',
  quantity: 'quantity',
  max_quantity: 'max_quantity'
});

exports.Prisma.Discount_categoryScalarFieldEnum = makeEnum({
  discount_id: 'discount_id',
  category_id: 'category_id',
  quantity: 'quantity',
  max_quantity: 'max_quantity'
});

exports.Prisma.Discount_user_codeScalarFieldEnum = makeEnum({
  customer_id: 'customer_id',
  discount_id: 'discount_id'
});

exports.Prisma.Discount_customer_spendScalarFieldEnum = makeEnum({
  customer_id: 'customer_id',
  total_spend: 'total_spend',
  spend_type_id: 'spend_type_id'
});

exports.Prisma.Discount_coin_informationScalarFieldEnum = makeEnum({
  id: 'id',
  customer_id: 'customer_id',
  amount: 'amount',
  got_date: 'got_date',
  expire_date: 'expire_date',
  get_from: 'get_from'
});

exports.Prisma.Discount_customer_coinScalarFieldEnum = makeEnum({
  customer_id: 'customer_id',
  total_coin: 'total_coin'
});

exports.Prisma.Payment_seller_incomeScalarFieldEnum = makeEnum({
  shop_id: 'shop_id',
  order_id: 'order_id',
  total_price: 'total_price',
  time: 'time'
});

exports.Prisma.Payment_seller_income_receiptScalarFieldEnum = makeEnum({
  shop_id: 'shop_id',
  total_income: 'total_income',
  time: 'time',
  receipt: 'receipt'
});

exports.Prisma.Payment_shop_bank_accountScalarFieldEnum = makeEnum({
  shop_id: 'shop_id',
  firstname: 'firstname',
  lastname: 'lastname',
  bank: 'bank',
  account_number: 'account_number'
});

exports.Prisma.WalletScalarFieldEnum = makeEnum({
  id: 'id',
  customer_id: 'customer_id',
  balance: 'balance',
  updated_time: 'updated_time'
});

exports.Prisma.Payment_credit_cardScalarFieldEnum = makeEnum({
  id: 'id',
  card_number: 'card_number',
  expire_date: 'expire_date',
  cvc: 'cvc',
  type: 'type'
});

exports.Prisma.Payment_credit_card_ownerScalarFieldEnum = makeEnum({
  customer_id: 'customer_id',
  credit_card_id: 'credit_card_id'
});

exports.Prisma.PaymentScalarFieldEnum = makeEnum({
  id: 'id',
  order_id: 'order_id',
  type: 'type',
  amount: 'amount',
  status: 'status',
  created_date: 'created_date',
  updated_date: 'updated_date'
});

exports.Prisma.Payment_transactionScalarFieldEnum = makeEnum({
  id: 'id',
  amount: 'amount',
  time: 'time',
  desc: 'desc'
});

exports.Prisma.Payment_credit_card_transactionScalarFieldEnum = makeEnum({
  id: 'id',
  card_id: 'card_id',
  status: 'status',
  transaction_id: 'transaction_id',
  refund_id: 'refund_id'
});

exports.Prisma.Payment_cardScalarFieldEnum = makeEnum({
  payment_id: 'payment_id',
  card_id: 'card_id',
  credit_card_transaction_id: 'credit_card_transaction_id'
});

exports.Prisma.Payment_wallet_transactionScalarFieldEnum = makeEnum({
  id: 'id',
  status: 'status',
  wallet_id: 'wallet_id',
  transaction_id: 'transaction_id',
  refund_id: 'refund_id'
});

exports.Prisma.Payment_walletScalarFieldEnum = makeEnum({
  payment_id: 'payment_id',
  wallet_id: 'wallet_id',
  wallet_transaction_id: 'wallet_transaction_id'
});

exports.Prisma.Payment_qrScalarFieldEnum = makeEnum({
  payment_id: 'payment_id',
  transaction_id: 'transaction_id',
  ref: 'ref',
  qr: 'qr'
});

exports.Prisma.Payment_deeplinkScalarFieldEnum = makeEnum({
  payment_id: 'payment_id',
  transaction_id: 'transaction_id',
  ref: 'ref',
  link: 'link'
});

exports.Prisma.Order_deleted_itemScalarFieldEnum = makeEnum({
  customer_id: 'customer_id',
  product_id: 'product_id',
  time: 'time'
});

exports.Prisma.Order_rebuyScalarFieldEnum = makeEnum({
  customer_id: 'customer_id',
  product_id: 'product_id',
  product_options: 'product_options',
  price: 'price',
  date: 'date'
});

exports.Prisma.Order_cart_itemScalarFieldEnum = makeEnum({
  customer_id: 'customer_id',
  product_id: 'product_id',
  product_options: 'product_options',
  quantity: 'quantity',
  added_time: 'added_time'
});

exports.Prisma.OrderScalarFieldEnum = makeEnum({
  id: 'id',
  customer_id: 'customer_id',
  total_price: 'total_price',
  order_date: 'order_date',
  status: 'status'
});

exports.Prisma.Order_statusScalarFieldEnum = makeEnum({
  id: 'id',
  delivery_by: 'delivery_by',
  status: 'status'
});

exports.Prisma.Order_itemScalarFieldEnum = makeEnum({
  order_id: 'order_id',
  product_id: 'product_id',
  product_options: 'product_options',
  quantity: 'quantity',
  price: 'price',
  status_id: 'status_id'
});

exports.Prisma.Order_cancel_refundScalarFieldEnum = makeEnum({
  id: 'id',
  order_id: 'order_id',
  product_id: 'product_id',
  product_options: 'product_options',
  start_time: 'start_time',
  canceled_time: 'canceled_time'
});

exports.Prisma.Order_detailScalarFieldEnum = makeEnum({
  order_id: 'order_id',
  address_id: 'address_id',
  payment_id: 'payment_id',
  discount_id: 'discount_id'
});

exports.Prisma.Order_billingScalarFieldEnum = makeEnum({
  order_id: 'order_id',
  request: 'request',
  request_time: 'request_time'
});

exports.Prisma.Order_refund_itemScalarFieldEnum = makeEnum({
  id: 'id',
  order_id: 'order_id',
  product_id: 'product_id',
  product_options: 'product_options',
  request: 'request',
  time_remaining: 'time_remaining'
});

exports.Prisma.Chat_shop_labelScalarFieldEnum = makeEnum({
  label_no: 'label_no',
  shop_id: 'shop_id',
  label_text: 'label_text',
  label_color: 'label_color'
});

exports.Prisma.Chat_shop_statScalarFieldEnum = makeEnum({
  shop_id: 'shop_id',
  response_rate: 'response_rate',
  response_time: 'response_time'
});

exports.Prisma.Chat_automated_responseScalarFieldEnum = makeEnum({
  id: 'id',
  query: 'query',
  response: 'response'
});

exports.Prisma.Chat_shop_preferenceScalarFieldEnum = makeEnum({
  shop_id: 'shop_id',
  greeting_message: 'greeting_message',
  automation_id: 'automation_id',
  url_slug: 'url_slug'
});

exports.Prisma.Chat_preferenceScalarFieldEnum = makeEnum({
  customer_id: 'customer_id',
  enter_to_send: 'enter_to_send',
  click_sticker: 'click_sticker',
  font_size: 'font_size'
});

exports.Prisma.Chat_conversationScalarFieldEnum = makeEnum({
  id: 'id',
  customer_id: 'customer_id',
  shop_id: 'shop_id',
  marked_as: 'marked_as',
  note: 'note',
  is_muted: 'is_muted',
  is_blocked: 'is_blocked'
});

exports.Prisma.Chat_messageScalarFieldEnum = makeEnum({
  id: 'id',
  conversation_id: 'conversation_id',
  from_customer: 'from_customer',
  message_time: 'message_time',
  content_type: 'content_type',
  seen: 'seen'
});

exports.Prisma.Chat_notificationScalarFieldEnum = makeEnum({
  message_id: 'message_id',
  action_url: 'action_url',
  type: 'type',
  notification_text: 'notification_text'
});

exports.Prisma.Chat_reported_conversationScalarFieldEnum = makeEnum({
  id: 'id',
  conversation_id: 'conversation_id',
  report_date: 'report_date'
});

exports.Prisma.Chat_reported_messageScalarFieldEnum = makeEnum({
  report_id: 'report_id',
  message_id: 'message_id',
  status: 'status',
  description: 'description',
  reviewed_by: 'reviewed_by'
});

exports.Prisma.Chat_textScalarFieldEnum = makeEnum({
  message_id: 'message_id',
  text: 'text'
});

exports.Prisma.Chat_imageScalarFieldEnum = makeEnum({
  message_id: 'message_id',
  title: 'title',
  path: 'path',
  thumbnail: 'thumbnail'
});

exports.Prisma.Chat_videoScalarFieldEnum = makeEnum({
  message_id: 'message_id',
  title: 'title',
  path: 'path',
  thumbnail: 'thumbnail'
});

exports.Prisma.Chat_sticker_lookupScalarFieldEnum = makeEnum({
  id: 'id',
  title: 'title',
  path: 'path',
  thumbnail: 'thumbnail'
});

exports.Prisma.Chat_stickerScalarFieldEnum = makeEnum({
  message_id: 'message_id',
  sticker_id: 'sticker_id'
});

exports.Prisma.Chat_deleted_messageScalarFieldEnum = makeEnum({
  message_id: 'message_id',
  conversation_id: 'conversation_id',
  from_customer: 'from_customer',
  message_time: 'message_time',
  content_type: 'content_type'
});

exports.Prisma.Rem_number_view_productScalarFieldEnum = makeEnum({
  customer_id: 'customer_id',
  product_id: 'product_id',
  total_view: 'total_view',
  event_id: 'event_id',
  added_time: 'added_time'
});

exports.Prisma.Rem_number_product_in_cartScalarFieldEnum = makeEnum({
  customer_id: 'customer_id',
  product_id: 'product_id',
  sum_in_cart: 'sum_in_cart',
  added_time: 'added_time',
  event_id: 'event_id'
});

exports.Prisma.Rem_number_payment_productScalarFieldEnum = makeEnum({
  customer_id: 'customer_id',
  product_id: 'product_id',
  sum_buy: 'sum_buy',
  added_time: 'added_time',
  event_id: 'event_id'
});

exports.Prisma.Rem_number_interaction_userScalarFieldEnum = makeEnum({
  customer_id: 'customer_id',
  product_id: 'product_id',
  interaction_score: 'interaction_score',
  added_time: 'added_time'
});

exports.Prisma.Rem_related_productsScalarFieldEnum = makeEnum({
  product_id: 'product_id',
  related_product: 'related_product'
});

exports.Prisma.Rem_suggestion_homepageScalarFieldEnum = makeEnum({
  customer_id: 'customer_id',
  product_id: 'product_id'
});

exports.Prisma.Rem_may_favorite_productScalarFieldEnum = makeEnum({
  product_id: 'product_id',
  related_products: 'related_products'
});

exports.Prisma.Rem_number_keyword_searchScalarFieldEnum = makeEnum({
  keyword: 'keyword',
  number_searched: 'number_searched'
});

exports.Prisma.Rem_product_promotionScalarFieldEnum = makeEnum({
  product_id: 'product_id',
  quantity: 'quantity',
  discount_id: 'discount_id',
  amount: 'amount'
});

exports.Prisma.Rem_promotion_type_interactionScalarFieldEnum = makeEnum({
  event_id: 'event_id',
  product_id: 'product_id',
  interaction_score: 'interaction_score',
  added_date: 'added_date'
});

exports.Prisma.Sconsole_stock_historyScalarFieldEnum = makeEnum({
  id: 'id',
  product_id: 'product_id',
  shop_id: 'shop_id',
  quantity: 'quantity',
  updated_date: 'updated_date'
});

exports.Prisma.Sconsole_order_statusScalarFieldEnum = makeEnum({
  id: 'id',
  order_id: 'order_id',
  product_id: 'product_id',
  shop_id: 'shop_id',
  started_date: 'started_date',
  status: 'status'
});

exports.Prisma.Sconsole_discount_logScalarFieldEnum = makeEnum({
  id: 'id',
  discount_id: 'discount_id',
  product_id: 'product_id',
  shop_id: 'shop_id',
  customer_id: 'customer_id',
  used_date: 'used_date'
});

exports.Prisma.Sconsole_flashsale_logScalarFieldEnum = makeEnum({
  id: 'id',
  shop_id: 'shop_id',
  flashsale_id: 'flashsale_id',
  added_date: 'added_date',
  ended_date: 'ended_date'
});

exports.Prisma.Sconsole_order_historyScalarFieldEnum = makeEnum({
  id: 'id',
  order_id: 'order_id',
  product_id: 'product_id',
  shop_id: 'shop_id',
  started_date: 'started_date',
  ended_date: 'ended_date',
  status: 'status'
});

exports.Prisma.Sconsole_set_lanch_productScalarFieldEnum = makeEnum({
  product_id: 'product_id',
  lanch_time: 'lanch_time'
});

exports.Prisma.Sconsole_refundScalarFieldEnum = makeEnum({
  id: 'id',
  customer_id: 'customer_id',
  product_id: 'product_id',
  shop_id: 'shop_id',
  type: 'type',
  description: 'description',
  refund_time: 'refund_time',
  quantity: 'quantity'
});

exports.Prisma.Sconsole_refund_statusScalarFieldEnum = makeEnum({
  refund_id: 'refund_id',
  status: 'status'
});

exports.Prisma.Sconsole_refund_moneyScalarFieldEnum = makeEnum({
  refund_id: 'refund_id',
  amount: 'amount',
  payment_id: 'payment_id',
  refund: 'refund',
  refund_time: 'refund_time'
});

exports.Prisma.Sconsole_refund_historyScalarFieldEnum = makeEnum({
  id: 'id',
  customer_id: 'customer_id',
  product_id: 'product_id',
  shop_id: 'shop_id',
  type: 'type',
  description: 'description',
  started_time: 'started_time',
  ended_time: 'ended_time',
  quantity: 'quantity',
  status: 'status'
});

exports.Prisma.Admin_support_typeScalarFieldEnum = makeEnum({
  id: 'id',
  title: 'title',
  description: 'description'
});

exports.Prisma.Admin_support_pictureScalarFieldEnum = makeEnum({
  id: 'id',
  title: 'title',
  path: 'path',
  thumbnail: 'thumbnail'
});

exports.Prisma.Admin_supportScalarFieldEnum = makeEnum({
  id: 'id',
  customer_id: 'customer_id',
  support_type_id: 'support_type_id',
  sent_date: 'sent_date',
  ended_date: 'ended_date',
  picture_id: 'picture_id',
  admin_id: 'admin_id',
  description: 'description',
  target: 'target',
  title: 'title'
});

exports.Prisma.Admin_support_statusScalarFieldEnum = makeEnum({
  support_id: 'support_id',
  status: 'status'
});

exports.Prisma.Admin_suspension_typeScalarFieldEnum = makeEnum({
  id: 'id',
  title: 'title',
  description: 'description'
});

exports.Prisma.Admin_customer_suspensionsScalarFieldEnum = makeEnum({
  customer_id: 'customer_id',
  start_date: 'start_date',
  end_date: 'end_date',
  description: 'description',
  picture_id: 'picture_id',
  suspension_type_id: 'suspension_type_id',
  admin_id: 'admin_id'
});

exports.Prisma.Admin_shop_suspensionsScalarFieldEnum = makeEnum({
  shop_id: 'shop_id',
  start_date: 'start_date',
  end_date: 'end_date',
  description: 'description',
  picture_id: 'picture_id',
  suspension_type_id: 'suspension_type_id',
  admin_id: 'admin_id'
});

exports.Prisma.Admin_reported_shopScalarFieldEnum = makeEnum({
  id: 'id',
  customer_id: 'customer_id',
  reported_shop_id: 'reported_shop_id',
  sent_date: 'sent_date',
  ended_date: 'ended_date',
  picture_id: 'picture_id',
  status: 'status'
});

exports.Prisma.Admin_reported_customerScalarFieldEnum = makeEnum({
  id: 'id',
  customer_id: 'customer_id',
  reported_customer_id: 'reported_customer_id',
  sent_date: 'sent_date',
  ended_date: 'ended_date',
  picture_id: 'picture_id',
  status: 'status'
});

exports.Prisma.Admin_auditScalarFieldEnum = makeEnum({
  admin_id: 'admin_id',
  login_date: 'login_date',
  action: 'action'
});

exports.Prisma.Home_banner_pictureScalarFieldEnum = makeEnum({
  id: 'id',
  title: 'title',
  position: 'position',
  path: 'path',
  thumbnail: 'thumbnail'
});

exports.Prisma.Home_bannerScalarFieldEnum = makeEnum({
  id: 'id',
  description: 'description',
  start_date: 'start_date',
  end_date: 'end_date',
  picture_id: 'picture_id',
  order: 'order',
  keywords: 'keywords',
  visible: 'visible'
});

exports.Prisma.Home_popupScalarFieldEnum = makeEnum({
  id: 'id',
  start_date: 'start_date',
  end_date: 'end_date',
  description: 'description',
  title: 'title',
  path: 'path',
  thumbnail: 'thumbnail'
});

exports.Prisma.Home_app_reviewScalarFieldEnum = makeEnum({
  id: 'id',
  firstname: 'firstname',
  lastname: 'lastname',
  nickname: 'nickname',
  review_date: 'review_date',
  comment: 'comment',
  theme_color: 'theme_color',
  title: 'title',
  path: 'path',
  thumbnail: 'thumbnail'
});

exports.Prisma.Home_partnerScalarFieldEnum = makeEnum({
  id: 'id',
  name: 'name',
  title: 'title',
  start_date: 'start_date',
  end_date: 'end_date',
  join_date: 'join_date',
  description: 'description',
  title_pic: 'title_pic',
  path: 'path',
  thumbnail: 'thumbnail',
  type: 'type'
});

exports.Prisma.Home_product_logScalarFieldEnum = makeEnum({
  customer_id: 'customer_id',
  product_id: 'product_id',
  view_date: 'view_date'
});

exports.Prisma.Home_add_to_cart_logScalarFieldEnum = makeEnum({
  customer_id: 'customer_id',
  product_id: 'product_id',
  added_date: 'added_date'
});

exports.Prisma.Home_shop_logScalarFieldEnum = makeEnum({
  customer_id: 'customer_id',
  shop_id: 'shop_id'
});

exports.Prisma.Home_payment_logScalarFieldEnum = makeEnum({
  customer_id: 'customer_id',
  payment_id: 'payment_id',
  issue_at: 'issue_at'
});

exports.Prisma.Home_discount_logScalarFieldEnum = makeEnum({
  customer_id: 'customer_id',
  discount_id: 'discount_id',
  view_date: 'view_date'
});

exports.Prisma.Search_historyScalarFieldEnum = makeEnum({
  customer_id: 'customer_id',
  query: 'query',
  search_time: 'search_time'
});

exports.Prisma.Search_keyword_interactsScalarFieldEnum = makeEnum({
  keyword: 'keyword',
  customer_id: 'customer_id',
  timestamp: 'timestamp'
});

exports.Prisma.Search_suggestion_matchpointScalarFieldEnum = makeEnum({
  start_key: 'start_key',
  next_key: 'next_key',
  timestamp: 'timestamp'
});

exports.Prisma.Search_suggestion_historyScalarFieldEnum = makeEnum({
  start_key: 'start_key',
  next_key: 'next_key',
  count: 'count'
});

exports.Prisma.Search_suggestion_scoreScalarFieldEnum = makeEnum({
  start_keyword: 'start_keyword',
  next_keyword: 'next_keyword',
  score: 'score'
});

exports.Prisma.Search_trend_summariesScalarFieldEnum = makeEnum({
  keyword: 'keyword',
  count: 'count',
  day: 'day',
  month: 'month',
  year: 'year'
});

exports.Prisma.Search_trend_recordsScalarFieldEnum = makeEnum({
  keyword: 'keyword',
  timestamp: 'timestamp'
});

exports.Prisma.Search_mispelling_logScalarFieldEnum = makeEnum({
  sentence: 'sentence',
  customer_id: 'customer_id',
  timestamp: 'timestamp'
});

exports.Prisma.Search_mispelling_editsScalarFieldEnum = makeEnum({
  orginal_keyword: 'orginal_keyword',
  edited_keyword: 'edited_keyword',
  customer_id: 'customer_id',
  count: 'count'
});

exports.Prisma.Search_mispelling_proofedScalarFieldEnum = makeEnum({
  orginal_keyword: 'orginal_keyword',
  edited_keyword: 'edited_keyword'
});

exports.Prisma.Business_page_typesScalarFieldEnum = makeEnum({
  id: 'id',
  title: 'title',
  path: 'path'
});

exports.Prisma.Business_conversation_typesScalarFieldEnum = makeEnum({
  id: 'id',
  title: 'title',
  weight: 'weight'
});

exports.Prisma.Business_page_view_recordsScalarFieldEnum = makeEnum({
  page_type_id: 'page_type_id',
  referer_page_type_id: 'referer_page_type_id',
  duration: 'duration',
  customer_id: 'customer_id',
  timestamp: 'timestamp'
});

exports.Prisma.Business_product_view_recordsScalarFieldEnum = makeEnum({
  product_id: 'product_id',
  customer_id: 'customer_id',
  duration: 'duration',
  timestamp: 'timestamp'
});

exports.Prisma.Business_conversation_recordsScalarFieldEnum = makeEnum({
  conversation_id: 'conversation_id',
  referer_page_types_id: 'referer_page_types_id',
  timestamp: 'timestamp'
});

exports.Prisma.Business_pageview_count_summariesScalarFieldEnum = makeEnum({
  pagetype_id: 'pagetype_id',
  registered: 'registered',
  avgduration: 'avgduration',
  count: 'count',
  date: 'date'
});

exports.Prisma.Business_pageview_referer_summariesScalarFieldEnum = makeEnum({
  pagetype_id: 'pagetype_id',
  referer_page_type: 'referer_page_type',
  count: 'count',
  date: 'date'
});

exports.Prisma.Business_product_view_summariesScalarFieldEnum = makeEnum({
  product_id: 'product_id',
  avgduration: 'avgduration',
  count: 'count',
  date: 'date'
});

exports.Prisma.Business_conversation_count_summariesScalarFieldEnum = makeEnum({
  conversation_id: 'conversation_id',
  referer_page_type_id: 'referer_page_type_id',
  count: 'count',
  date: 'date'
});

exports.Prisma.Business_interaction_weightScalarFieldEnum = makeEnum({
  weight: 'weight',
  date: 'date'
});

exports.Prisma.Discount_daily_coinScalarFieldEnum = makeEnum({
  customer_id: 'customer_id',
  got_date: 'got_date'
});

exports.Prisma.Discount_rewardScalarFieldEnum = makeEnum({
  id: 'id',
  type: 'type',
  quantity: 'quantity',
  description: 'description',
  max_quantity: 'max_quantity'
});

exports.Prisma.Discount_used_coinScalarFieldEnum = makeEnum({
  customer_id: 'customer_id',
  used_time: 'used_time',
  used_amount: 'used_amount',
  user_for: 'user_for'
});

exports.Prisma.SortOrder = makeEnum({
  asc: 'asc',
  desc: 'desc'
});

exports.Prisma.JsonNullValueInput = makeEnum({
  JsonNull: 'JsonNull'
});

exports.Prisma.QueryMode = makeEnum({
  default: 'default',
  insensitive: 'insensitive'
});

exports.Prisma.JsonNullValueFilter = makeEnum({
  DbNull: 'DbNull',
  JsonNull: 'JsonNull',
  AnyNull: 'AnyNull'
});
exports.Gender = makeEnum({
  Male: 'Male',
  Female: 'Female',
  Others: 'Others',
  PreferNotToSay: 'PreferNotToSay'
});

exports.Shop_section = makeEnum({
  Banner: 'Banner',
  BannerCarousel: 'BannerCarousel',
  ProductCarousel: 'ProductCarousel',
  Video: 'Video'
});

exports.Platform = makeEnum({
  Ios: 'Ios',
  Android: 'Android',
  PC: 'PC',
  MacOS: 'MacOS',
  Linux: 'Linux'
});

exports.Comment_Raitng = makeEnum({
  Like: 'Like',
  Dislike: 'Dislike'
});

exports.DiscountClass = makeEnum({
  FreeShipping: 'FreeShipping',
  ReducePrice: 'ReducePrice'
});

exports.DiscountTypes = makeEnum({
  Shop: 'Shop',
  Event: 'Event',
  App: 'App',
  Category: 'Category'
});

exports.PaymentBankSelect = makeEnum({
  SCB: 'SCB',
  KBANK: 'KBANK',
  TMB: 'TMB',
  KTB: 'KTB'
});

exports.PaymentCreditTypes = makeEnum({
  MasterCard: 'MasterCard',
  Visa: 'Visa',
  PayPal: 'PayPal'
});

exports.PaymentTypes = makeEnum({
  QR: 'QR',
  Deeplink: 'Deeplink',
  Card: 'Card'
});

exports.PaymentStatus = makeEnum({
  Pending: 'Pending',
  Success: 'Success',
  Failed: 'Failed',
  Refunding: 'Refunding',
  Refunded: 'Refunded'
});

exports.PaymentCardTransactionStatus = makeEnum({
  Success: 'Success',
  InsuffientBalance: 'InsuffientBalance',
  Rejected: 'Rejected',
  Refunded: 'Refunded'
});

exports.PaymentWalletTransactionStatus = makeEnum({
  Success: 'Success',
  InsuffientBalance: 'InsuffientBalance',
  Refunded: 'Refunded'
});

exports.OrderStatus = makeEnum({
  Preparing: 'Preparing',
  Delivering: 'Delivering',
  Delivered: 'Delivered'
});

exports.ChatConversationMark = makeEnum({
  Spam: 'Spam',
  Important: 'Important',
  Unread: 'Unread',
  Done: 'Done'
});

exports.ChatMessageTypes = makeEnum({
  Text: 'Text',
  Image: 'Image',
  Video: 'Video'
});

exports.SConsoleRefundTypes = makeEnum({
  Defective: 'Defective',
  UnSatisfied: 'UnSatisfied'
});

exports.homeBannerPicturePosition = makeEnum({
  Main: 'Main',
  Sub: 'Sub'
});

exports.homePartnerType = makeEnum({
  PaymentMethod: 'PaymentMethod',
  Delivery: 'Delivery'
});

exports.DiscountUserTypes = makeEnum({
  Bronze: 'Bronze',
  Silver: 'Silver',
  Gold: 'Gold',
  Platinum: 'Platinum'
});

exports.Prisma.ModelName = makeEnum({
  customer: 'customer',
  customer_info: 'customer_info',
  customer_picture: 'customer_picture',
  customer_picture_file: 'customer_picture_file',
  address: 'address',
  customer_address: 'customer_address',
  customer_old_password: 'customer_old_password',
  customer_wishlist: 'customer_wishlist',
  customer_followed_shop: 'customer_followed_shop',
  customer_email_verification: 'customer_email_verification',
  shop_info: 'shop_info',
  shop_picture: 'shop_picture',
  shop_comment: 'shop_comment',
  shop_section_log: 'shop_section_log',
  shop_section: 'shop_section',
  shop_flashsale: 'shop_flashsale',
  shop_flashsale_history: 'shop_flashsale_history',
  shop_banner: 'shop_banner',
  shop_banner_carousel: 'shop_banner_carousel',
  shop_product_carousel: 'shop_product_carousel',
  shop_video: 'shop_video',
  shop_category: 'shop_category',
  category_icon_picture: 'category_icon_picture',
  category_banner_picture: 'category_banner_picture',
  category: 'category',
  product: 'product',
  product_detail: 'product_detail',
  product_reviews: 'product_reviews',
  product_reviews_picture: 'product_reviews_picture',
  product_short_link: 'product_short_link',
  product_comment_rating: 'product_comment_rating',
  product_options: 'product_options',
  product_choices: 'product_choices',
  discount: 'discount',
  discount_shop: 'discount_shop',
  event: 'event',
  discount_event: 'discount_event',
  discount_app: 'discount_app',
  discount_category: 'discount_category',
  discount_user_code: 'discount_user_code',
  discount_customer_spend: 'discount_customer_spend',
  discount_coin_information: 'discount_coin_information',
  discount_customer_coin: 'discount_customer_coin',
  payment_seller_income: 'payment_seller_income',
  payment_seller_income_receipt: 'payment_seller_income_receipt',
  payment_shop_bank_account: 'payment_shop_bank_account',
  wallet: 'wallet',
  payment_credit_card: 'payment_credit_card',
  payment_credit_card_owner: 'payment_credit_card_owner',
  payment: 'payment',
  payment_transaction: 'payment_transaction',
  payment_credit_card_transaction: 'payment_credit_card_transaction',
  payment_card: 'payment_card',
  payment_wallet_transaction: 'payment_wallet_transaction',
  payment_wallet: 'payment_wallet',
  payment_qr: 'payment_qr',
  payment_deeplink: 'payment_deeplink',
  order_deleted_item: 'order_deleted_item',
  order_rebuy: 'order_rebuy',
  order_cart_item: 'order_cart_item',
  order: 'order',
  order_status: 'order_status',
  order_item: 'order_item',
  order_cancel_refund: 'order_cancel_refund',
  order_detail: 'order_detail',
  order_billing: 'order_billing',
  order_refund_item: 'order_refund_item',
  chat_shop_label: 'chat_shop_label',
  chat_shop_stat: 'chat_shop_stat',
  chat_automated_response: 'chat_automated_response',
  chat_shop_preference: 'chat_shop_preference',
  chat_preference: 'chat_preference',
  chat_conversation: 'chat_conversation',
  chat_message: 'chat_message',
  chat_notification: 'chat_notification',
  chat_reported_conversation: 'chat_reported_conversation',
  chat_reported_message: 'chat_reported_message',
  chat_text: 'chat_text',
  chat_image: 'chat_image',
  chat_video: 'chat_video',
  chat_sticker_lookup: 'chat_sticker_lookup',
  chat_sticker: 'chat_sticker',
  chat_deleted_message: 'chat_deleted_message',
  rem_number_view_product: 'rem_number_view_product',
  rem_number_product_in_cart: 'rem_number_product_in_cart',
  rem_number_payment_product: 'rem_number_payment_product',
  rem_number_interaction_user: 'rem_number_interaction_user',
  rem_related_products: 'rem_related_products',
  rem_suggestion_homepage: 'rem_suggestion_homepage',
  rem_may_favorite_product: 'rem_may_favorite_product',
  rem_number_keyword_search: 'rem_number_keyword_search',
  rem_product_promotion: 'rem_product_promotion',
  rem_promotion_type_interaction: 'rem_promotion_type_interaction',
  sconsole_stock_history: 'sconsole_stock_history',
  sconsole_order_status: 'sconsole_order_status',
  sconsole_discount_log: 'sconsole_discount_log',
  sconsole_flashsale_log: 'sconsole_flashsale_log',
  sconsole_order_history: 'sconsole_order_history',
  sconsole_set_lanch_product: 'sconsole_set_lanch_product',
  sconsole_refund: 'sconsole_refund',
  sconsole_refund_status: 'sconsole_refund_status',
  sconsole_refund_money: 'sconsole_refund_money',
  sconsole_refund_history: 'sconsole_refund_history',
  admin_support_type: 'admin_support_type',
  admin_support_picture: 'admin_support_picture',
  admin_support: 'admin_support',
  admin_support_status: 'admin_support_status',
  admin_suspension_type: 'admin_suspension_type',
  admin_customer_suspensions: 'admin_customer_suspensions',
  admin_shop_suspensions: 'admin_shop_suspensions',
  admin_reported_shop: 'admin_reported_shop',
  admin_reported_customer: 'admin_reported_customer',
  admin_audit: 'admin_audit',
  home_banner_picture: 'home_banner_picture',
  home_banner: 'home_banner',
  home_popup: 'home_popup',
  home_app_review: 'home_app_review',
  home_partner: 'home_partner',
  home_product_log: 'home_product_log',
  home_add_to_cart_log: 'home_add_to_cart_log',
  home_shop_log: 'home_shop_log',
  home_payment_log: 'home_payment_log',
  home_discount_log: 'home_discount_log',
  search_history: 'search_history',
  search_keyword_interacts: 'search_keyword_interacts',
  search_suggestion_matchpoint: 'search_suggestion_matchpoint',
  search_suggestion_history: 'search_suggestion_history',
  search_suggestion_score: 'search_suggestion_score',
  search_trend_summaries: 'search_trend_summaries',
  search_trend_records: 'search_trend_records',
  search_mispelling_log: 'search_mispelling_log',
  search_mispelling_edits: 'search_mispelling_edits',
  search_mispelling_proofed: 'search_mispelling_proofed',
  business_page_types: 'business_page_types',
  business_conversation_types: 'business_conversation_types',
  business_page_view_records: 'business_page_view_records',
  business_product_view_records: 'business_product_view_records',
  business_conversation_records: 'business_conversation_records',
  business_pageview_count_summaries: 'business_pageview_count_summaries',
  business_pageview_referer_summaries: 'business_pageview_referer_summaries',
  business_product_view_summaries: 'business_product_view_summaries',
  business_conversation_count_summaries: 'business_conversation_count_summaries',
  business_interaction_weight: 'business_interaction_weight',
  discount_daily_coin: 'discount_daily_coin',
  discount_reward: 'discount_reward',
  discount_used_coin: 'discount_used_coin'
});

/**
 * Create the Client
 */
class PrismaClient {
  constructor() {
    throw new Error(
      `PrismaClient is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
    )
  }
}
exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
